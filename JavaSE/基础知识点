#1.为什么重写equals还要重写hashcode？

在没有重写equals的情况下，Object父类的equals方法默认比较的是对象在堆中的引用值。
如果重写了equals的话，可以根据自己的规则进行判定两个对象是否相等。（比如学号姓名一样的学生实体即为相等）
但是，如果将实体存进与哈希有关的集合当中时，哈希地址是根据hashcode进行计算的。如果没有重写hashcode的时候，默认返回的是引用值。
这将会导致Hash表当中存入两个相同的学生。


#2.Object默认的hashcode实现？
Object类对于hashcode并没有具体的实现，调用的是jvm底层的c++代码进行计算。该方法返回的是一个int数字，底层的cpp代码中
一共有六种默认的实现方式。



#3.==比较的是什么？
在java中==符号比较的是两个对象在内存当中的引用值。



#4.若对一个类不重写，它的equals()方法是如何比较的？
若不重写equals的话，将直接调用基类Object的equals方法，该方法比较的还是内存当中的引用值。


